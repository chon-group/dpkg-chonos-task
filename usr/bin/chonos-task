#! /bin/sh
EmbedMAS_TMP=/tmp/.embedMAS
mkdir -p $EmbedMAS_TMP
EmbedMAS_LOGFILE=$EmbedMAS_TMP/embeddedMAS.log
LOCK=$EmbedMAS_TMP/task.conf
myPID=$$

while getopts t:-: flag 
    do
    case "${flag}" in
        t) task=${OPTARG};;  
        -) opt=${OPTARG};;
    esac
done

taskMaster(){
	/usr/bin/inotifywait -q -e modify $EmbedMAS_TMP/taskExec.sh								# waiting for a new task
	echo "[chonos-task] New task: $(cat $EmbedMAS_TMP/taskExec.sh)" >> $EmbedMAS_LOGFILE	# log the task
	$EmbedMAS_TMP/taskExec.sh																# execute the task
	echo 0 > $LOCK																			# unlock
}

lock(){	
	if [ $(cat $LOCK) -eq 0 ]
	then
		echo $myPID > $LOCK
	fi
}

if [ "$task" != "" ]; then
	while [ "$(cat $LOCK)" != "$myPID" ]
	do
		lock
	done	
	echo $task > $EmbedMAS_TMP/taskExec.sh
	exit 0
fi

ls $EmbedMAS_TMP/taskMaster.pid 2> /dev/null >/dev/null
STATUS=$?
if [ "$opt" = "help" ]; then
	man chonos-task
    exit 0
elif [ "$opt" = "start" ]; then
	echo "[chonos-task] Starting the ChonOS Task Manager" >> $EmbedMAS_LOGFILE
	if [ $STATUS -eq 0 ] 
	then
		echo -n "Task Manager is already running!" 
		cat $EmbedMAS_TMP/taskMaster.pid 
		exit 0
	else
		echo $$ > $EmbedMAS_TMP/taskMaster.pid
		touch $EmbedMAS_TMP/taskExec.sh
		chmod +x $EmbedMAS_TMP/taskExec.sh
		echo 0 > $LOCK
		while true
		do
			taskMaster
		done
	fi
elif [ "$opt" = "stop" ]; then
    echo "[chonos-task] Stopping ChonOS Task Manager" >> $EmbedMAS_LOGFILE
	if [ $STATUS -eq 0 ] 
	then
		kill `cat $EmbedMAS_TMP/taskMaster.pid`
		rm $EmbedMAS_TMP/taskMaster.pid
		rm $EmbedMAS_TMP/taskExec.sh
	else
		pkill chonos-task
	fi
    exit 0
fi

/usr/bin/chonos-task --help